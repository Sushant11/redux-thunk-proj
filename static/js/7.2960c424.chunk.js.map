{"version":3,"sources":["components/Exception/NotFound.js","containers/Exception/NotFoundContainer.js","assets/lol.png","components/Jokes/JokeForm.js","components/Jokes/JokeItem.js","components/Jokes/Joke.js","actions/jokeAction.js","utility/config.js","utility/httpBase.js","utility/apifile.js","service/jokesSevice.js","containers/Jokes/JokeContainer.js","containers/Jokes/index.js"],"names":["NotFound","status","title","subTitle","extra","to","className","NotFoundContainer","Component","module","exports","Form","create","withRouter","props","fetchCustomJoke","setVisible","form","getFieldDecorator","validateFields","resetFields","formLayout","xl","span","lg","md","sm","xs","btnLayout","onSubmit","e","preventDefault","err","values","gutter","Item","label","rules","required","message","Group","initialValue","buttonStyle","Button","value","style","width","placeholder","disabled","type","htmlType","icon","onClick","Text","Typography","jokes","jokeLoading","fetchJoke","useState","visible","antIcon","fontSize","spin","error","spinning","indicator","setup","delivery","joke","column","strong","toUpperCase","category","shape","size","onCancel","console","log","footer","JokeForm","Title","Joke","useEffect","level","src","lol","alt","offset","jokeFetchRequest","JOKE_FETCH_REQUEST","jokeFetchRequestSuccess","data","JOKE_FETCH_REQUEST_SUCCESS","jokeFetchRequestFailure","JOKE_FETCH_REQUEST_FAILURE","jokeCleanRequest","JOKE_CLEAN_REQUEST","API_BASE_URL","process","httpBase","instance","axios","baseURL","headers","Accept","responseType","interceptors","response","use","Promise","reject","fetch","endpoint","params","get","API_KEY","REACT_APP_API_KEY","formData","dispatch","then","catch","Error","flags","contains","ListContainer","actions","cleanJoke","this","connect","state","payload","jokeErrors","loading","bindActionCreators","Object","assign","jokeAction","jokeSevice","Jokes","match","exact","path","url","component"],"mappings":"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","file":"static/js/7.2960c424.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Result } from 'antd';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={ <Link to={`/#/`} className=\"ant-btn\">\r\n                    Go Back to Home\r\n                </Link>}\r\n            />\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\n// Import custom components\r\nimport NotFound from '../../components/Exception/NotFound';\r\n\r\nclass NotFoundContainer extends Component {\r\n    render() {\r\n        return <NotFound />;\r\n    }\r\n}\r\n\r\nexport default NotFoundContainer;\r\n","module.exports = __webpack_public_path__ + \"static/media/lol.35a1f362.png\";","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Form, Input, Button, Row, Col, Radio, Checkbox } from \"antd\";\r\n\r\nconst jokeForm = props => {\r\n  const { fetchCustomJoke, setVisible } = props;\r\n  const { getFieldDecorator, validateFields, resetFields } = props.form;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    validateFields((err, values) => {\r\n      if (!err) {\r\n        fetchCustomJoke(values);\r\n        setVisible(false);\r\n      }\r\n    });\r\n  };\r\n  const handleReset = e => {\r\n    e.preventDefault();\r\n    resetFields();\r\n  };\r\n\r\n  const formLayout = {\r\n    xl: { span: 12 },\r\n    lg: { span: 12 },\r\n    md: { span: 12 },\r\n    sm: { span: 12 },\r\n    xs: { span: 24 }\r\n  };\r\n\r\n  const btnLayout = {\r\n    xl: { span: 12 },\r\n    lg: { span: 12 },\r\n    md: { span: 12 },\r\n    sm: { span: 12 },\r\n    xs: { span: 12 }\r\n  };\r\n  return (\r\n    <Form className=\"joke-form\" onSubmit={handleSubmit}>\r\n      <Row gutter={16}>\r\n        <Col {...formLayout}>\r\n          <Form.Item label=\"Joke Type\">\r\n            {getFieldDecorator(\"type\", {\r\n              rules: [{ required: true, message: \"Please select a type.\" }]\r\n            })(\r\n              <Radio.Group initialValue=\"single\" buttonStyle=\"solid\">\r\n                <Radio.Button value=\"single\">Single</Radio.Button>\r\n                <Radio.Button value=\"twopart\">Two Part</Radio.Button>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n        </Col>\r\n        <Col {...formLayout}>\r\n          <Form.Item label=\"Category\">\r\n            {getFieldDecorator(\"category\", {\r\n              rules: [{ required: true, message: \"Please select a category.\" }]\r\n            })(\r\n              <Checkbox.Group style={{ width: \"100%\" }}>\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Checkbox value=\"Programming\">Programming</Checkbox>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Checkbox value=\"Miscellaneous\">Miscellaneous</Checkbox>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Checkbox value=\"Dark\">Dark</Checkbox>\r\n                  </Col>\r\n                </Row>\r\n              </Checkbox.Group>\r\n            )}\r\n          </Form.Item>\r\n        </Col>{\" \"}\r\n        <Col {...formLayout}>\r\n          <Form.Item label=\"Contains\">\r\n            {getFieldDecorator(\"contains\")(<Input placeholder=\"Enter Text\" />)}\r\n          </Form.Item>\r\n        </Col>\r\n        <Col {...formLayout}>\r\n          <Form.Item label=\"Flags\">\r\n            {getFieldDecorator(\"flags\")(\r\n              <Checkbox.Group style={{ width: \"100%\" }} disabled>\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <Checkbox value=\"nsfw\">Nsfw</Checkbox>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Checkbox value=\"political\">Political</Checkbox>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Checkbox value=\"religious\">Religious</Checkbox>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Checkbox value=\"sexist\">Sexist</Checkbox>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Checkbox value=\"racist\">Racist</Checkbox>\r\n                  </Col>\r\n                </Row>\r\n              </Checkbox.Group>\r\n            )}\r\n          </Form.Item>\r\n        </Col>{\" \"}\r\n        <Col className=\"gutter-row\" span={24}>\r\n          <Col {...btnLayout}>\r\n            {\" \"}\r\n            <Form.Item className=\"btn-center\">\r\n              <Button type=\"primary\" htmlType=\"submit\" icon=\"search\">\r\n                Search\r\n              </Button>\r\n            </Form.Item>{\" \"}\r\n          </Col>\r\n\r\n          <Col {...btnLayout}>\r\n            {\" \"}\r\n            <Form.Item className=\"btn-center\">\r\n              <Button type=\"primary\" icon=\"reload\" onClick={handleReset}>\r\n                Reset\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Form.create()(withRouter(jokeForm));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Spin,\r\n  Descriptions,\r\n  Typography,\r\n  Card,\r\n  Button,\r\n  Icon,\r\n  Row,\r\n  Col,\r\n  Modal\r\n} from \"antd\";\r\nimport JokeForm from \"./JokeForm\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst JokeItem = props => {\r\n  const { jokes, jokeLoading, fetchJoke } = props;\r\n  const { resetFields } = props.form;\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\n  const handleRandom = e => {\r\n    e.preventDefault();\r\n    fetchJoke();\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    console.log(e);\r\n    setVisible(false);\r\n    resetFields();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {jokes && jokes.error === true ? (\r\n        <div className=\"joke-message\">\r\n          {\" \"}\r\n          <Text type=\"danger\">Sorry.{jokes.message}!</Text>\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          <Card className=\"form-card\">\r\n            <Spin spinning={jokeLoading} indicator={antIcon}>\r\n              {/* <Skeleton loading={jokeLoading} rows={1} active> */}{\" \"}\r\n              <div className=\"joke-show\">\r\n                {jokes && jokes.setup && <h2>{jokes.setup}</h2>}{\" \"}\r\n                {jokes && jokes.delivery && <h3>- {jokes.delivery}</h3>}{\" \"}\r\n                {jokes && jokes.joke && <h2>{jokes.joke}</h2>}\r\n              </div>\r\n              {/* </Skeleton> */}\r\n              <Descriptions className=\"attributes\" column={2}>\r\n                {jokes && jokes.type && (\r\n                  <Descriptions.Item label=\"Type\">\r\n                    <Text strong>{jokes.type.toUpperCase()}</Text>\r\n                  </Descriptions.Item>\r\n                )}{\" \"}\r\n                {jokes && jokes.category && (\r\n                  <Descriptions.Item label=\"Category\">\r\n                    <Text strong>{jokes.category.toUpperCase()}</Text>\r\n                  </Descriptions.Item>\r\n                )}{\" \"}\r\n                {/* {jokes && jokes.flags && (\r\n          <Descriptions.Item label=\"Flags\">\r\n            {\" \"}\r\n            <Checkbox.Group style={{ width: \"100%\" }} disabled>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false ? jokes.flags.nsfw : null\r\n                    }\r\n                  >\r\n                    Nsfw\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false\r\n                        ? jokes.flags.political\r\n                        : null\r\n                    }\r\n                  >\r\n                    Political\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false\r\n                        ? jokes.flags.religious\r\n                        : null\r\n                    }\r\n                  >\r\n                    Religious\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false ? jokes.flags.sexist : null\r\n                    }\r\n                  >\r\n                    Sexist\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false ? jokes.flags.racist : null\r\n                    }\r\n                  >\r\n                    Racist\r\n                  </Checkbox>\r\n                </Col>\r\n              </Row>\r\n            </Checkbox.Group>\r\n          </Descriptions.Item>\r\n        )} */}\r\n              </Descriptions>\r\n            </Spin>\r\n          </Card>\r\n          <Row>\r\n            <Col className=\"btn-layout\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon=\"sync\"\r\n                shape=\"round\"\r\n                size=\"large\"\r\n                className=\"btn-white\"\r\n                // loading={jokeLoading}\r\n                onClick={handleRandom}\r\n              ></Button>{\" \"}\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"round\"\r\n                icon=\"plus\"\r\n                size=\"large\"\r\n                className=\"btn-white\"\r\n                onClick={showModal}\r\n                // loading={jokeLoading}\r\n              >\r\n                More\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            title=\"Search Jokes\"\r\n            visible={visible}\r\n            onCancel={handleCancel}\r\n            footer={\"\"}\r\n          >\r\n            <JokeForm {...props} visible={visible} setVisible={setVisible} />\r\n          </Modal>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form.create()(withRouter(JokeItem));\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport lol from  '../../assets/lol.png'\r\n\r\nimport JokeItem from \"./JokeItem\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Joke = props => {\r\n  const { fetchJoke } = props;\r\n\r\n  useEffect(() => {\r\n    fetchJoke();\r\n  }, [fetchJoke]);\r\n\r\n  const responsiveGrid = {\r\n    xl: { span: 12, offset: 6 },\r\n    lg: { span: 20, offset: 2 },\r\n    md: { span: 24 },\r\n    sm: { span: 24 },\r\n    xs: { span: 24 }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Title className=\"title\" level={4}>\r\n          <span><img src={lol} alt='LOL'/>Laugh Out Loud<img src={lol} alt='LOL'/></span>\r\n        </Title>\r\n        <Row gutter={16} className=\"lol-main\" span={12}>\r\n          <Col {...responsiveGrid} className=\"joke-item\">\r\n            <JokeItem {...props} className=\"joke-item\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n","import {\r\n  JOKE_FETCH_REQUEST,\r\n  JOKE_FETCH_REQUEST_SUCCESS,\r\n  JOKE_FETCH_REQUEST_FAILURE,\r\n  JOKE_CLEAN_REQUEST\r\n} from \"./actionTypes\";\r\n\r\nexport const jokeFetchRequest = () => {\r\n  return {\r\n    type: JOKE_FETCH_REQUEST\r\n  };\r\n};\r\n\r\nexport const jokeFetchRequestSuccess = data => {\r\n  return {\r\n    type: JOKE_FETCH_REQUEST_SUCCESS,\r\n    data\r\n  };\r\n};\r\n\r\nexport const jokeFetchRequestFailure = error => {\r\n  return {\r\n    type: JOKE_FETCH_REQUEST_FAILURE,\r\n    error\r\n  };\r\n};\r\n\r\nexport const jokeCleanRequest = () => {\r\n  return {\r\n      type: JOKE_CLEAN_REQUEST,\r\n  };\r\n};","export const API_BASE_URL = `${process.env.REACT_APP_REST_API_HOST}`;\r\n","import axios from 'axios';\r\nimport { API_BASE_URL } from './config';\r\n\r\nexport const httpBase = () => {\r\n  const instance = axios.create({\r\n    baseURL: `${API_BASE_URL}`,\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    responseType: 'json',\r\n  });\r\n\r\n  instance.interceptors.response.use(\r\n    response => {\r\n      return response;\r\n    },\r\n    error => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return instance;\r\n};\r\n","import {httpBase} from \"./httpBase\";\r\n\r\nexport function fetch(endpoint, params) {\r\n    return httpBase().get(`/${endpoint}`, { params });\r\n}\r\n\r\nexport function store(endpoint, data) {\r\n    return httpBase().post(`/${endpoint}`, data);\r\n}\r\n","import {\r\n  jokeFetchRequest,\r\n  jokeFetchRequestSuccess,\r\n  jokeFetchRequestFailure\r\n} from \"../actions/jokeAction\";\r\n\r\nimport { fetch } from \"../utility/apifile\";\r\n\r\nexport const API_KEY = `${process.env.REACT_APP_API_KEY}`;\r\n\r\nexport const fetchJoke = formData => {\r\n  return dispatch => {\r\n    dispatch(jokeFetchRequest());\r\n    return fetch(\r\n      // formData === undefined\r\n      //   ? `Any`\r\n      //   : `${formData.category}?blacklistFlags=${formData.flags}&type=${formData.type}&contains=${formData.contains}`\r\n      'Any'\r\n    )\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          dispatch(jokeFetchRequestSuccess(response));\r\n        } else {\r\n          // TODO\r\n        }\r\n      })\r\n      .catch(error => dispatch(jokeFetchRequestFailure(error.Error)));\r\n  };\r\n};\r\n\r\nexport const fetchCustomJoke = formData => {\r\n  return dispatch => {\r\n    dispatch(jokeFetchRequest());\r\n    return fetch(\r\n     `${formData.category ? formData.category : ''}${formData.flags ? `?blacklistFlags=${formData.flags}` : ''}${formData.type ? `?type=${formData.type}` : ''}${formData.contains ? `?contains=${formData.contains}` : ''}`\r\n    )\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          dispatch(jokeFetchRequestSuccess(response));\r\n        } else {\r\n          // TODO\r\n        }\r\n      })\r\n      .catch(error => dispatch(jokeFetchRequestFailure(error.Error)));\r\n  };\r\n};\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Import custom components\r\nimport Joke from \"../../components/Jokes/Joke\";\r\nimport * as jokeSevice from \"../../service/jokesSevice\";\r\nimport * as jokeAction from \"../../actions/jokeAction\";\r\n\r\nexport class ListContainer extends Component {\r\n  /**\r\n   * Fetch joke.\r\n   *\r\n   */\r\n  fetchJoke = () => {\r\n    this.props.actions.fetchJoke();\r\n  };\r\n\r\n  /**\r\n   * Fetch joke by formData.\r\n   * @param {object} formData\r\n   *\r\n   */\r\n  fetchCustomJoke = formData => {\r\n    this.props.actions.fetchCustomJoke(formData);\r\n  };\r\n\r\n  /**\r\n   * Clean joke record\r\n   *\r\n   */\r\n  cleanJoke = () => {\r\n    this.props.actions.jokeCleanRequest();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Joke\r\n        fetchJoke={this.fetchJoke}\r\n        fetchCustomJoke={this.fetchCustomJoke}\r\n        cleanJoke={this.cleanJoke}\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Map the state to props.\r\n */\r\nconst mapStateToProps = state => ({\r\n  jokes: state.jokes.payload.data,\r\n  jokeErrors: state.jokes.payload.data,\r\n  jokeLoading: state.jokes.loading\r\n});\r\n\r\n/**\r\n * Map the actions to props.\r\n */\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(\r\n      Object.assign({}, jokeAction, jokeSevice),\r\n      dispatch\r\n    )\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer);\r\n","import React, { Fragment } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\n// Import custom components\r\nimport Joke from \"./JokeContainer\";\r\n\r\nimport NotFound from \"../Exception/NotFoundContainer\";\r\n\r\nconst Jokes = ({ match }) => (\r\n  <Fragment>\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={Joke} />\r\n\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </Fragment>\r\n);\r\n\r\nexport default Jokes;\r\n"],"sourceRoot":""}