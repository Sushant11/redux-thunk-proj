{"version":3,"sources":["components/Exception/NotFound.js","containers/Exception/NotFoundContainer.js","components/Jokes/JokeForm.js","components/Jokes/JokeItem.js","components/Jokes/Joke.js","actions/jokeAction.js","utility/config.js","utility/httpBase.js","utility/apifile.js","service/jokesSevice.js","containers/Jokes/JokeContainer.js","containers/Jokes/index.js"],"names":["NotFound","status","title","subTitle","extra","to","className","NotFoundContainer","Component","Form","create","withRouter","props","fetchJoke","jokeLoading","fetchCustomJoke","form","getFieldDecorator","validateFields","resetFields","onSubmit","e","preventDefault","err","values","gutter","xs","sm","md","lg","xl","Item","label","rules","required","message","Group","initialValue","buttonStyle","Button","value","style","width","span","placeholder","disabled","type","icon","loading","onClick","htmlType","Text","Typography","JokeItem","jokes","console","log","error","flags","spinning","active","setup","delivery","joke","column","code","category","Title","Joke","useEffect","level","JokeForm","jokeFetchRequest","JOKE_FETCH_REQUEST","jokeFetchRequestSuccess","data","JOKE_FETCH_REQUEST_SUCCESS","jokeFetchRequestFailure","JOKE_FETCH_REQUEST_FAILURE","jokeCleanRequest","JOKE_CLEAN_REQUEST","API_BASE_URL","process","httpBase","instance","axios","baseURL","headers","Accept","responseType","interceptors","response","use","Promise","reject","fetch","endpoint","params","get","API_KEY","REACT_APP_API_KEY","formData","dispatch","then","catch","Error","contains","ListContainer","actions","cleanJoke","this","connect","state","payload","jokeErrors","bindActionCreators","Object","assign","jokeAction","jokeSevice","Jokes","match","exact","path","url","component"],"mappings":"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","file":"static/js/7.cd56f5c3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Result } from 'antd';\n\nconst NotFound = () => {\n    return (\n            <Result\n                status=\"404\"\n                title=\"404\"\n                subTitle=\"Sorry, the page you visited does not exist.\"\n                extra={ <Link to={`/#/`} className=\"ant-btn\">\n                    Go Back to Home\n                </Link>}\n            />\n    );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\n// Import custom components\nimport NotFound from '../../components/Exception/NotFound';\n\nclass NotFoundContainer extends Component {\n    render() {\n        return <NotFound />;\n    }\n}\n\nexport default NotFoundContainer;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Form, Input, Button, Row, Col, Radio, Checkbox, Card } from \"antd\";\n\nconst jokeForm = props => {\n  const { fetchJoke, jokeLoading, fetchCustomJoke } = props;\n  const { getFieldDecorator, validateFields, resetFields } = props.form;\n\n  const handleRandom = e => {\n    e.preventDefault();\n    fetchJoke();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (!err) {\n        fetchCustomJoke(values);\n      }\n    });\n  };\n  const handleReset = e => {\n    e.preventDefault();\n    resetFields();\n  };\n  return (\n    <Card className=\"form-card\">\n      <Form className=\"joke-form\" onSubmit={handleSubmit}>\n        <Row gutter={16}>\n          <Col xs={24} sm={24} md={12} lg={8} xl={8}>\n            <Form.Item label=\"Joke Type\">\n              {getFieldDecorator(\"type\", {\n                rules: [{ required: true, message: 'Please select a type.' }],\n              })(\n                <Radio.Group initialValue=\"single\" buttonStyle=\"solid\">\n                  <Radio.Button value=\"single\">Single</Radio.Button>\n                  <Radio.Button value=\"twopart\">Two Part</Radio.Button>\n                </Radio.Group>\n              )}\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={8} xl={8}>\n            <Form.Item label=\"Category\">\n              {getFieldDecorator(\"category\", {\n                rules: [{ required: true, message: 'Please select a category.' }],\n              })(\n                <Checkbox.Group style={{ width: \"100%\" }}>\n                  <Row>\n                    <Col span={24}>\n                      <Checkbox value=\"Programming\">Programming</Checkbox>\n                    </Col>\n                    <Col span={24}>\n                      <Checkbox value=\"Miscellaneous\">Miscellaneous</Checkbox>\n                    </Col>\n                    <Col span={24}>\n                      <Checkbox value=\"Dark\">Dark</Checkbox>\n                    </Col>\n                  </Row>\n                </Checkbox.Group>\n              )}\n            </Form.Item>\n          </Col>{\" \"}\n          <Col xs={24} sm={24} md={24} lg={8} xl={8}>\n            <Form.Item label=\"Contains\">\n              {getFieldDecorator(\"contains\")(\n                <Input placeholder=\"Enter Text\" />\n              )}\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n            <Form.Item label=\"Flags\">\n              {getFieldDecorator(\"flags\")(\n                <Checkbox.Group style={{ width: \"100%\" }} disabled>\n                  <Row>\n                    <Col span={8}>\n                      <Checkbox value=\"nsfw\">Nsfw</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox value=\"political\">Political</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox value=\"religious\">Religious</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox value=\"sexist\">Sexist</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox value=\"racist\">Racist</Checkbox>\n                    </Col>\n                  </Row>\n                </Checkbox.Group>\n              )}\n            </Form.Item>\n          </Col>{\" \"}\n          <Col className=\"gutter-row\" span={24}>\n            <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n              {\" \"}\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  icon=\"sync\"\n                  loading={jokeLoading}\n                  onClick={handleRandom}\n                >\n                  Random\n                </Button>\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n              {\" \"}\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  icon=\"search\"\n                >\n                  Search\n                </Button>\n              </Form.Item>{\" \"}\n            </Col>\n\n            <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n              {\" \"}\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  icon=\"reload\"\n                  onClick={handleReset}\n                >\n                  Reset\n                </Button>\n              </Form.Item>\n            </Col>\n          </Col>\n        </Row>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Form.create()(withRouter(jokeForm));\n","import React from \"react\";\nimport { Spin, Descriptions, Typography, Skeleton, Card } from \"antd\";\n\nconst { Text } = Typography;\n\nconst JokeItem = props => {\n  const { jokes, jokeLoading } = props;\n  console.log(\n    \"jokes && jokes.flags :\",\n    jokes && jokes.error === false && jokes.flags\n  );\n  return (\n    <Spin spinning={jokeLoading}>\n      {jokes && jokes.error === true ? (\n        <div className=\"joke-message\">\n          {\" \"}\n          <Text type=\"danger\">Sorry.{jokes.message}!</Text>\n        </div>\n      ) : (\n        <Card className=\"form-card\">\n        <Skeleton loading={jokeLoading} active> <div className=\"joke-show\">\n        {jokes && jokes.setup && <h2>{jokes.setup}</h2>}{\" \"}\n        {jokes && jokes.delivery && <h3>- {jokes.delivery}</h3>}{\" \"}\n        {jokes && jokes.joke && <h2>{jokes.joke}</h2>}\n      </div></Skeleton>\n      </Card>\n      )}\n\n      <Descriptions className=\"attributes\" column={2}>\n        {jokes && jokes.type && (\n          <Descriptions.Item label=\"Type\">\n            <Text code>{jokes.type}</Text>\n          </Descriptions.Item>\n        )}{\" \"}\n        {jokes && jokes.category && (\n          <Descriptions.Item label=\"Category\">\n            <Text code>{jokes.category}</Text>\n          </Descriptions.Item>\n        )}{\" \"}\n        {/* {jokes && jokes.flags && (\n          <Descriptions.Item label=\"Flags\">\n            {\" \"}\n            <Checkbox.Group style={{ width: \"100%\" }} disabled>\n              <Row>\n                <Col span={8}>\n                  <Checkbox\n                    checked={\n                      jokes && jokes.error === false ? jokes.flags.nsfw : null\n                    }\n                  >\n                    Nsfw\n                  </Checkbox>\n                </Col>\n                <Col span={8}>\n                  <Checkbox\n                    checked={\n                      jokes && jokes.error === false\n                        ? jokes.flags.political\n                        : null\n                    }\n                  >\n                    Political\n                  </Checkbox>\n                </Col>\n                <Col span={8}>\n                  <Checkbox\n                    checked={\n                      jokes && jokes.error === false\n                        ? jokes.flags.religious\n                        : null\n                    }\n                  >\n                    Religious\n                  </Checkbox>\n                </Col>\n                <Col span={8}>\n                  <Checkbox\n                    checked={\n                      jokes && jokes.error === false ? jokes.flags.sexist : null\n                    }\n                  >\n                    Sexist\n                  </Checkbox>\n                </Col>\n                <Col span={8}>\n                  <Checkbox\n                    checked={\n                      jokes && jokes.error === false ? jokes.flags.racist : null\n                    }\n                  >\n                    Racist\n                  </Checkbox>\n                </Col>\n              </Row>\n            </Checkbox.Group>\n          </Descriptions.Item>\n        )} */}\n      </Descriptions>\n    </Spin>\n  );\n};\n\nexport default JokeItem;\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Typography } from \"antd\";\n\nimport JokeForm from \"./JokeForm\";\nimport JokeItem from \"./JokeItem\";\n\nconst { Title } = Typography;\n\nconst Joke = props => {\n  const { fetchJoke } = props;\n\n  useEffect(() => {\n    fetchJoke();\n  }, [fetchJoke]);\n  return (\n    <div>\n      <div>\n        <Title className=\"title\" level={4}>\n          <span>Laugh Out Loud</span>\n        </Title>\n        <Row gutter={16} className=\"lol-main\">\n          <Col xs={24} sm={24} md={24} lg={12} xl={12} className=\"joke-item\">\n            <JokeItem {...props} />\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n              <JokeForm {...props} />\n            </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Joke;\n","import {\n  JOKE_FETCH_REQUEST,\n  JOKE_FETCH_REQUEST_SUCCESS,\n  JOKE_FETCH_REQUEST_FAILURE,\n  JOKE_CLEAN_REQUEST\n} from \"./actionTypes\";\n\nexport const jokeFetchRequest = () => {\n  return {\n    type: JOKE_FETCH_REQUEST\n  };\n};\n\nexport const jokeFetchRequestSuccess = data => {\n  return {\n    type: JOKE_FETCH_REQUEST_SUCCESS,\n    data\n  };\n};\n\nexport const jokeFetchRequestFailure = error => {\n  return {\n    type: JOKE_FETCH_REQUEST_FAILURE,\n    error\n  };\n};\n\nexport const jokeCleanRequest = () => {\n  return {\n      type: JOKE_CLEAN_REQUEST,\n  };\n};","export const API_BASE_URL = `${process.env.REACT_APP_REST_API_HOST}`;\n","import axios from 'axios';\nimport { API_BASE_URL } from './config';\n\nexport const httpBase = () => {\n  const instance = axios.create({\n    baseURL: `${API_BASE_URL}`,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    responseType: 'json',\n  });\n\n  instance.interceptors.response.use(\n    response => {\n      return response;\n    },\n    error => {\n      return Promise.reject(error);\n    }\n  );\n\n  return instance;\n};\n","import {httpBase} from \"./httpBase\";\n\nexport function fetch(endpoint, params) {\n    return httpBase().get(`/${endpoint}`, { params });\n}\n\nexport function store(endpoint, data) {\n    return httpBase().post(`/${endpoint}`, data);\n}\n","import {\n  jokeFetchRequest,\n  jokeFetchRequestSuccess,\n  jokeFetchRequestFailure\n} from \"../actions/jokeAction\";\n\nimport { fetch } from \"../utility/apifile\";\n\nexport const API_KEY = `${process.env.REACT_APP_API_KEY}`;\n\nexport const fetchJoke = formData => {\n  return dispatch => {\n    dispatch(jokeFetchRequest());\n    return fetch(\n      // formData === undefined\n      //   ? `Any`\n      //   : `${formData.category}?blacklistFlags=${formData.flags}&type=${formData.type}&contains=${formData.contains}`\n      'Any'\n    )\n      .then(response => {\n        if (response.status === 200) {\n          dispatch(jokeFetchRequestSuccess(response));\n        } else {\n          // TODO\n        }\n      })\n      .catch(error => dispatch(jokeFetchRequestFailure(error.Error)));\n  };\n};\n\nexport const fetchCustomJoke = formData => {\n  return dispatch => {\n    dispatch(jokeFetchRequest());\n    return fetch(\n     `${formData.category ? formData.category : ''}${formData.flags ? `?blacklistFlags=${formData.flags}` : ''}${formData.type ? `?type=${formData.type}` : ''}${formData.contains ? `?contains=${formData.contains}` : ''}`\n    )\n      .then(response => {\n        if (response.status === 200) {\n          dispatch(jokeFetchRequestSuccess(response));\n        } else {\n          // TODO\n        }\n      })\n      .catch(error => dispatch(jokeFetchRequestFailure(error.Error)));\n  };\n};\n\n\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\n// Import custom components\nimport Joke from \"../../components/Jokes/Joke\";\nimport * as jokeSevice from \"../../service/jokesSevice\";\nimport * as jokeAction from \"../../actions/jokeAction\";\n\nexport class ListContainer extends Component {\n  /**\n   * Fetch joke.\n   *\n   */\n  fetchJoke = () => {\n    this.props.actions.fetchJoke();\n  };\n  \n  /**\n   * Fetch joke by formData.\n   * @param {object} formData\n   *\n   */\n  fetchCustomJoke = (formData) => {\n    this.props.actions.fetchCustomJoke(formData);\n  };\n\n  /**\n   * Clean joke record\n   *\n   */\n  cleanJoke = () => {\n    this.props.actions.jokeCleanRequest();\n  };\n\n  render() {\n    return (\n      <Joke\n        fetchJoke={this.fetchJoke}\n        fetchCustomJoke={this.fetchCustomJoke}\n        cleanJoke={this.cleanJoke}\n        {...this.props}\n      />\n    );\n  }\n}\n\n/**\n * Map the state to props.\n */\nconst mapStateToProps = state => ({\n  jokes: state.jokes.payload.data,\n  jokeErrors: state.jokes.payload.data,\n  jokeLoading: state.jokes.loading\n});\n\n/**\n * Map the actions to props.\n */\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(\n      Object.assign({}, jokeAction, jokeSevice),\n      dispatch\n    )\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer);\n","import React, { Fragment } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// Import custom components\nimport Joke from \"./JokeContainer\";\n\nimport NotFound from \"../Exception/NotFoundContainer\";\n\nconst Jokes = ({ match }) => (\n  <Fragment>\n    <Switch>\n      <Route exact path={`${match.url}`} component={Joke} />\n\n      <Route component={NotFound} />\n    </Switch>\n  </Fragment>\n);\n\nexport default Jokes;\n"],"sourceRoot":""}