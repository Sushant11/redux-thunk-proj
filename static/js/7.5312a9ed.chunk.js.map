{"version":3,"sources":["components/Exception/NotFound.js","containers/Exception/NotFoundContainer.js","components/Jokes/JokeForm.js","components/Jokes/JokeItem.js","components/Jokes/Joke.js","actions/jokeAction.js","utility/config.js","utility/httpBase.js","utility/apifile.js","service/jokesSevice.js","containers/Jokes/JokeContainer.js","containers/Jokes/index.js"],"names":["NotFound","status","title","subTitle","extra","to","className","NotFoundContainer","Component","Form","create","withRouter","props","fetchJoke","jokeLoading","fetchCustomJoke","form","getFieldDecorator","validateFields","resetFields","onSubmit","e","preventDefault","err","values","gutter","xs","sm","md","lg","xl","Item","label","Group","initialValue","buttonStyle","Button","value","style","width","span","placeholder","type","size","icon","loading","onClick","htmlType","Text","Typography","JokeItem","jokes","console","log","error","flags","spinning","message","setup","delivery","joke","code","category","disabled","checked","nsfw","political","religious","sexist","racist","Title","Joke","useEffect","level","JokeForm","jokeFetchRequest","JOKE_FETCH_REQUEST","jokeFetchRequestSuccess","data","JOKE_FETCH_REQUEST_SUCCESS","jokeFetchRequestFailure","JOKE_FETCH_REQUEST_FAILURE","jokeCleanRequest","JOKE_CLEAN_REQUEST","API_BASE_URL","process","httpBase","instance","axios","baseURL","headers","Accept","responseType","interceptors","response","use","Promise","reject","fetch","endpoint","params","get","API_KEY","REACT_APP_API_KEY","formData","dispatch","then","catch","Error","contains","ListContainer","actions","cleanJoke","this","connect","state","payload","jokeErrors","bindActionCreators","Object","assign","jokeAction","jokeSevice","Jokes","match","exact","path","url","component"],"mappings":"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","file":"static/js/7.5312a9ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Result } from 'antd';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={ <Link to={`/#/`} className=\"ant-btn\">\r\n                    Go Back to Home\r\n                </Link>}\r\n            />\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\n// Import custom components\r\nimport NotFound from '../../components/Exception/NotFound';\r\n\r\nclass NotFoundContainer extends Component {\r\n    render() {\r\n        return <NotFound />;\r\n    }\r\n}\r\n\r\nexport default NotFoundContainer;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Form, Input, Button, Row, Col, Radio, Checkbox, Card } from \"antd\";\r\n\r\nconst jokeForm = props => {\r\n  const { fetchJoke, jokeLoading, fetchCustomJoke } = props;\r\n  const { getFieldDecorator, validateFields, resetFields } = props.form;\r\n\r\n  const handleRandom = e => {\r\n    e.preventDefault();\r\n    fetchJoke();\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    validateFields((err, values) => {\r\n      if (!err) {\r\n        fetchCustomJoke(values);\r\n      }\r\n    });\r\n  };\r\n  const handleReset = e => {\r\n    e.preventDefault();\r\n    resetFields();\r\n  };\r\n  return (\r\n    <Card className=\"form-card\">\r\n      <Form className=\"joke-form\" onSubmit={handleSubmit}>\r\n        <Row gutter={16}>\r\n          <Col xs={24} sm={24} md={24} lg={6} xl={6}>\r\n            <Form.Item label=\"Joke Type\">\r\n              {getFieldDecorator(\"type\")(\r\n                <Radio.Group initialValue=\"single\" buttonStyle=\"solid\">\r\n                  <Radio.Button value=\"single\">Single</Radio.Button>\r\n                  <Radio.Button value=\"twopart\">Two Part</Radio.Button>\r\n                </Radio.Group>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={24} md={24} lg={6} xl={6}>\r\n            <Form.Item label=\"Category\">\r\n              {getFieldDecorator(\"category\")(\r\n                <Radio.Group initialValue=\"misc\" buttonStyle=\"solid\">\r\n                  <Radio.Button value=\"Any\">Any</Radio.Button>\r\n                  <Radio.Button value=\"Programming\">Programming</Radio.Button>\r\n                  <Radio.Button value=\"Miscellaneous\">\r\n                    Miscellaneous\r\n                  </Radio.Button>\r\n                  <Radio.Button value=\"Dark\">Dark</Radio.Button>\r\n                </Radio.Group>\r\n              )}\r\n            </Form.Item>\r\n          </Col>{\" \"}\r\n          <Col xs={24} sm={24} md={24} lg={6} xl={6}>\r\n            <Form.Item label=\"Flags\">\r\n              {getFieldDecorator(\"flags\")(\r\n                <Checkbox.Group style={{ width: \"100%\" }}>\r\n                  <Row>\r\n                    <Col span={8}>\r\n                      <Checkbox value=\"nsfw\">Nsfw</Checkbox>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Checkbox value=\"political\">Political</Checkbox>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Checkbox value=\"religious\">Religious</Checkbox>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Checkbox value=\"sexist\">Sexist</Checkbox>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Checkbox value=\"racist\">Racist</Checkbox>\r\n                    </Col>\r\n                  </Row>\r\n                </Checkbox.Group>\r\n              )}\r\n            </Form.Item>\r\n          </Col>{\" \"}\r\n          <Col xs={24} sm={24} md={24} lg={6} xl={6}>\r\n            <Form.Item label=\"Contains\">\r\n              {getFieldDecorator(\"contains\")(\r\n                <Input placeholder=\"Enter Text\" />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={24}>\r\n            <Col span={8}>\r\n              {\" \"}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  className=\"form-button\"\r\n                  size=\"large\"\r\n                  icon=\"sync\"\r\n                  loading={jokeLoading}\r\n                  onClick={handleRandom}\r\n                >\r\n                  Random\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              {\" \"}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"form-button\"\r\n                  size=\"large\"\r\n                  icon=\"search\"\r\n                >\r\n                  Search\r\n                </Button>\r\n              </Form.Item>{\" \"}\r\n            </Col>\r\n\r\n            <Col span={8}>\r\n              {\" \"}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  className=\"form-button\"\r\n                  size=\"large\"\r\n                  icon=\"reload\"\r\n                  onClick={handleReset}\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Form.create()(withRouter(jokeForm));\r\n","import React from \"react\";\r\nimport { Spin, Descriptions, Typography, Checkbox, Row, Col } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst JokeItem = props => {\r\n  const { jokes, jokeLoading } = props;\r\n  console.log(\r\n    \"jokes && jokes.flags :\",\r\n    jokes && jokes.error === false && jokes.flags\r\n  );\r\n  return (\r\n    <Spin spinning={jokeLoading}>\r\n      {jokes && jokes.error === true ? (\r\n        <div className=\"joke-message\">\r\n          {\" \"}\r\n          <Text type=\"danger\">Sorry.{jokes.message}!</Text>\r\n        </div>\r\n      ) : (\r\n        <div className=\"joke-show\">\r\n          {jokes && jokes.setup && <h2>{jokes.setup}</h2>}{\" \"}\r\n          {jokes && jokes.delivery && <h3>- {jokes.delivery}</h3>}{\" \"}\r\n          {jokes && jokes.joke && <h2>{jokes.joke}</h2>}\r\n        </div>\r\n      )}\r\n\r\n      <Descriptions className=\"attributes\">\r\n        {jokes && jokes.type && (\r\n          <Descriptions.Item label=\"Type\">\r\n            <Text code>{jokes.type}</Text>\r\n          </Descriptions.Item>\r\n        )}{\" \"}\r\n        {jokes && jokes.category && (\r\n          <Descriptions.Item label=\"Category\">\r\n            <Text code>{jokes.category}</Text>\r\n          </Descriptions.Item>\r\n        )}{\" \"}\r\n        {jokes && jokes.flags && (\r\n          <Descriptions.Item label=\"Flags\">\r\n            {\" \"}\r\n            <Checkbox.Group style={{ width: \"100%\" }} disabled>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false ? jokes.flags.nsfw : null\r\n                    }\r\n                  >\r\n                    Nsfw\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false\r\n                        ? jokes.flags.political\r\n                        : null\r\n                    }\r\n                  >\r\n                    Political\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false\r\n                        ? jokes.flags.religious\r\n                        : null\r\n                    }\r\n                  >\r\n                    Religious\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false ? jokes.flags.sexist : null\r\n                    }\r\n                  >\r\n                    Sexist\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Checkbox\r\n                    checked={\r\n                      jokes && jokes.error === false ? jokes.flags.racist : null\r\n                    }\r\n                  >\r\n                    Racist\r\n                  </Checkbox>\r\n                </Col>\r\n              </Row>\r\n            </Checkbox.Group>\r\n          </Descriptions.Item>\r\n        )}\r\n      </Descriptions>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default JokeItem;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Typography } from \"antd\";\r\n\r\nimport JokeForm from \"./JokeForm\";\r\nimport JokeItem from \"./JokeItem\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Joke = props => {\r\n  const { fetchJoke } = props;\r\n\r\n  useEffect(() => {\r\n    fetchJoke();\r\n  }, [fetchJoke]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Title className=\"title\" level={4}>\r\n          <span>Laugh Out Loud</span>\r\n        </Title>\r\n        <Row gutter={16} className=\"lol-main\">\r\n          <Col lg={{ span: 24 }} xl={{ span: 24 }} className=\"joke-item\">\r\n            <JokeItem {...props} />\r\n            <Col lg={{ span: 24 }} xl={{ span: 24 }}>\r\n              <JokeForm {...props} />\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n","import {\r\n  JOKE_FETCH_REQUEST,\r\n  JOKE_FETCH_REQUEST_SUCCESS,\r\n  JOKE_FETCH_REQUEST_FAILURE,\r\n  JOKE_CLEAN_REQUEST\r\n} from \"./actionTypes\";\r\n\r\nexport const jokeFetchRequest = () => {\r\n  return {\r\n    type: JOKE_FETCH_REQUEST\r\n  };\r\n};\r\n\r\nexport const jokeFetchRequestSuccess = data => {\r\n  return {\r\n    type: JOKE_FETCH_REQUEST_SUCCESS,\r\n    data\r\n  };\r\n};\r\n\r\nexport const jokeFetchRequestFailure = error => {\r\n  return {\r\n    type: JOKE_FETCH_REQUEST_FAILURE,\r\n    error\r\n  };\r\n};\r\n\r\nexport const jokeCleanRequest = () => {\r\n  return {\r\n      type: JOKE_CLEAN_REQUEST,\r\n  };\r\n};","export const API_BASE_URL = `${process.env.REACT_APP_REST_API_HOST}`;\r\n","import axios from 'axios';\r\nimport { API_BASE_URL } from './config';\r\n\r\nexport const httpBase = () => {\r\n  const instance = axios.create({\r\n    baseURL: `${API_BASE_URL}`,\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    responseType: 'json',\r\n  });\r\n\r\n  instance.interceptors.response.use(\r\n    response => {\r\n      return response;\r\n    },\r\n    error => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return instance;\r\n};\r\n","import {httpBase} from \"./httpBase\";\r\n\r\nexport function fetch(endpoint, params) {\r\n    return httpBase().get(`/${endpoint}`, { params });\r\n}\r\n\r\nexport function store(endpoint, data) {\r\n    return httpBase().post(`/${endpoint}`, data);\r\n}\r\n","import {\r\n  jokeFetchRequest,\r\n  jokeFetchRequestSuccess,\r\n  jokeFetchRequestFailure\r\n} from \"../actions/jokeAction\";\r\n\r\nimport { fetch } from \"../utility/apifile\";\r\n\r\nexport const API_KEY = `${process.env.REACT_APP_API_KEY}`;\r\n\r\nexport const fetchJoke = formData => {\r\n  return dispatch => {\r\n    dispatch(jokeFetchRequest());\r\n    return fetch(\r\n      // formData === undefined\r\n      //   ? `Any`\r\n      //   : `${formData.category}?blacklistFlags=${formData.flags}&type=${formData.type}&contains=${formData.contains}`\r\n      'Any'\r\n    )\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          dispatch(jokeFetchRequestSuccess(response));\r\n        } else {\r\n          // TODO\r\n        }\r\n      })\r\n      .catch(error => dispatch(jokeFetchRequestFailure(error.Error)));\r\n  };\r\n};\r\n\r\nexport const fetchCustomJoke = formData => {\r\n  return dispatch => {\r\n    dispatch(jokeFetchRequest());\r\n    return fetch(\r\n     `${formData.category}?blacklistFlags=${formData.flags}&type=${formData.type}&contains=${formData.contains}`\r\n    )\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          dispatch(jokeFetchRequestSuccess(response));\r\n        } else {\r\n          // TODO\r\n        }\r\n      })\r\n      .catch(error => dispatch(jokeFetchRequestFailure(error.Error)));\r\n  };\r\n};\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Import custom components\r\nimport Joke from \"../../components/Jokes/Joke\";\r\nimport * as jokeSevice from \"../../service/jokesSevice\";\r\nimport * as jokeAction from \"../../actions/jokeAction\";\r\n\r\nexport class ListContainer extends Component {\r\n  /**\r\n   * Fetch joke.\r\n   *\r\n   */\r\n  fetchJoke = () => {\r\n    this.props.actions.fetchJoke();\r\n  };\r\n  \r\n  /**\r\n   * Fetch joke by formData.\r\n   * @param {object} formData\r\n   *\r\n   */\r\n  fetchCustomJoke = (formData) => {\r\n    this.props.actions.fetchCustomJoke(formData);\r\n  };\r\n\r\n  /**\r\n   * Clean joke record\r\n   *\r\n   */\r\n  cleanJoke = () => {\r\n    this.props.actions.jokeCleanRequest();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Joke\r\n        fetchJoke={this.fetchJoke}\r\n        fetchCustomJoke={this.fetchCustomJoke}\r\n        cleanJoke={this.cleanJoke}\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Map the state to props.\r\n */\r\nconst mapStateToProps = state => ({\r\n  jokes: state.jokes.payload.data,\r\n  jokeErrors: state.jokes.payload.data,\r\n  jokeLoading: state.jokes.loading\r\n});\r\n\r\n/**\r\n * Map the actions to props.\r\n */\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(\r\n      Object.assign({}, jokeAction, jokeSevice),\r\n      dispatch\r\n    )\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer);\r\n","import React, { Fragment } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\n// Import custom components\r\nimport Joke from \"./JokeContainer\";\r\n\r\nimport NotFound from \"../Exception/NotFoundContainer\";\r\n\r\nconst Jokes = ({ match }) => (\r\n  <Fragment>\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={Joke} />\r\n\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </Fragment>\r\n);\r\n\r\nexport default Jokes;\r\n"],"sourceRoot":""}